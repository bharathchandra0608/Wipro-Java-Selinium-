package collections;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Iterator;

class Patient {
    private String id;
    private String name;

    public Patient(String id, String name) {
        this.id = id;
        this.name = name;
    }

    // Only ID is used to determine uniqueness
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!(obj instanceof Patient)) return false;
        Patient other = (Patient) obj;
        return this.id.equals(other.id);
    }

    @Override
    public int hashCode() {
        return id.hashCode();
    }

    public void display() {
        System.out.println("ID: " + id + " | Name: " + name);
    }
}
public class HospitalRegistration {
    public static void main(String[] args) {
        HashSet<Patient> patientSet = new HashSet<>();
        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\n--- Hospital Registration System ---");
            System.out.println("1. Register New Patient");
            System.out.println("2. View Registered Patients");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter Patient ID: ");
                    String id = scanner.nextLine();

                    System.out.print("Enter Patient Name: ");
                    String name = scanner.nextLine();

                    Patient newPatient = new Patient(id, name);
                    if (patientSet.add(newPatient)) {
                        System.out.println("‚úÖ Patient registered successfully.");
                    } else {
                        System.out.println("‚ùå Patient with ID " + id + " is already registered.");
                    }
                    break;

                case 2:
                    System.out.println("\nüìã List of Registered Patients:");
                    if (patientSet.isEmpty()) {
                        System.out.println("No patients registered yet.");
                    } else {
                        for (Patient p : patientSet) {
                            p.display();
                        }
                    }
                    break;

                case 3:
                    System.out.println("Exiting... üè•");
                    break;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }

        } while (choice != 3);

        scanner.close();
    }
}
